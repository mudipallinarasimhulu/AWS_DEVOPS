#kubernetes 
* when your trying to create pods by default  two container will create .
* first it will create pause container then it will create actual container
* pause container will first create namespace and then it will assign to container and assign the ip address 
* container inside pods will share the all the resource in the pods
* using deploymnet pods will re-create if the pods are down 
* you can run two different containers in single pods 
* to reduce tlatencry problem will create two differenet contianers in single in pods ( multi  container) 
* 

* services will create on top of the deploymnet 
1.cluster ip
2.nodeport
3.load balancer

* we will use cluster ip to bind the pods and in different nodes 
* how communications happen inside the nodes 
* pods1 (applications)  >> node1 >> node2 >> pods2 (BD server)
* service ( cluster ip ) will take care of the binding the pods ip to the service internally ( if re-start or re-installed the pods )
* 
NAMESPACE
 * namespace is isolation area with in kubenetes clusters

#to check the available namespaces 
kubectl get namespaces
#if you want to  create pods in specific namespace without providing the namespace
* kubectl config get-contexts
* kubectl config set-context project-1 --namespace=project-1 --user=username  --cluster=arn:aws:eks:us-east-1:084828592413:cluster/Kubernetes-TEST
* kubctl config use-context project-1
*kunectl get pods -all-namespace   ==> get all the namespaces
* kubectl exec -it web-server --/bin/bash ==> get the inside the pods 

TAINTS  

#check the taints info
kubectl get nodes 
kubectl describe nodes
#taint the node 
kubectl taint node nodename CriticalAddonsOnly:NoSchedule
# untaint the node 
kubectl taint node nodename CriticalAddonsOnly:NoSchedule-



